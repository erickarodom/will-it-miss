import postcss from 'postcss';
import parser from 'postcss-values-parser';

var placeMatch = /^place-(content|items|self)/;

var index = postcss.plugin('postcss-place', function (opts) {
	// prepare options
	var preserve = 'preserve' in Object(opts) ? Boolean(opts.prefix) : true;

	return function (root) {
		// walk each matching declaration
		root.walkDecls(placeMatch, function (decl) {
			// alignment
			var alignment = decl.prop.match(placeMatch)[1];

			// value ast and child nodes
			var value = parser(decl.value).parse();
			var children = value.nodes[0].nodes;

			// new justify-[alignment] and align-[alignment] declarations
			var alignValue = children.length === 1 ? decl.value : String(children.slice(0, 1)).trim();
			var justifyValue = children.length === 1 ? decl.value : String(children.slice(1)).trim();

			decl.cloneBefore({
				prop: `align-${alignment}`,
				value: alignValue
			});

			decl.cloneBefore({
				prop: `justify-${alignment}`,
				value: justifyValue
			});

			// conditionally remove place-[alignment]
			if (!preserve) {
				decl.remove();
			}
		});
	};
});

export default index;
